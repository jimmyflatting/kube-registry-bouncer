apiVersion: v1
kind: Namespace
metadata:
  name: kube-registry-bouncer-poc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-registry-bouncer-server
  namespace: kube-registry-bouncer-poc
  labels:
    app: kube-registry-bouncer-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-registry-bouncer-server
  template:
    metadata:
      labels:
        app: kube-registry-bouncer-server
    spec:
      containers:
      - name: kube-registry-bouncer
        imagePullPolicy: Always
        image: ghcr.io/jimmyflatting/kube-registry-bouncer:latest
        env:
        - name: KUBE_BOUNCER_REGISTRY_WHITELIST
          value: "ghcr.io" # Can be `comma` separated values
        - name: KUBE_BOUNCER_CERTIFICATE
          value: "/etc/kube-registry-bouncer/certs/tls.crt"
        - name: KUBE_BOUNCER_KEY
          value: "/etc/kube-registry-bouncer/certs/tls.key"
        - name: KUBE_BOUNCER_DEBUG
          value: "true"
        ports:
        - containerPort: 1323
          name: krb-api
        volumeMounts:
        - name: kube-registry-bouncer-tls-certs
          mountPath: /etc/kube-registry-bouncer/certs
          readOnly: true
        - name: kube-registry-bouncer-logs
          mountPath: /var/log/kube-registry-bouncer
      volumes:
      - name: kube-registry-bouncer-tls-certs
        secret:
          secretName: kube-registry-bouncer-tls-secret
      - name: kube-registry-bouncer-logs
        emptyDir: {}